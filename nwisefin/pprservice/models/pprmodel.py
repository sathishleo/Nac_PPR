from django.db import models
from django.utils.timezone import now

from db.vsolvmodels import VsolvModels


class Pprdata(VsolvModels):
    finyear = models.CharField(max_length=16,null=True,blank=True)
    quarter = models.IntegerField(null=True,blank=True)
    transactionmonth = models.CharField(max_length=16, null=False, blank=False)
    transactionyear = models.CharField(max_length=4, null=False, blank=False)
    transactiondate = models.DateField()
    valuedate = models.DateField()
    cc_code = models.CharField(max_length=16,null=True,blank=True)
    bs_code = models.CharField(max_length=16,null=True,blank=True)
    apinvoice_id = models.IntegerField()
    apinvoicebranch_id = models.IntegerField(null=True,blank=True,db_index=True)
    apinvoicesupplier_id = models.IntegerField(null=True,blank=True)
    apinvoicedetails_id = models.IntegerField(default=0)
    apsubcat_id = models.IntegerField(null=True, db_index=True)
    apexpense_id = models.IntegerField(null=True, db_index=True)
    bsname = models.CharField(max_length=128, null=False, blank=False)
    ccname = models.CharField(max_length=128, null=False, blank=False)
    bizname = models.CharField(max_length=128, null=False, blank=False)
    sectorname = models.CharField(max_length=32, null=True,blank=True)
    amount = models.DecimalField(max_digits=16, decimal_places=2, default=0.00)
    taxamount = models.DecimalField(max_digits=16, decimal_places=2, default=0.00)
    otheramount = models.DecimalField(max_digits=16, decimal_places=2, default=0.00)
    totalamount = models.DecimalField(max_digits=16, decimal_places=2, default=0.00)
    categorygid = models.IntegerField(null=True,db_index=True)
    ccbsdtl_bs = models.IntegerField(null=True)
    ccbsdtl_cc = models.IntegerField(null=True)
    entry_module = models.CharField(max_length=128, null=True, blank=True)
    entry_crno = models.CharField(max_length=128, null=True, blank=True)
    status = models.SmallIntegerField(default=0)
    create_by = models.IntegerField(null=False, blank=False)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)
    fas_flag = models.IntegerField(default=1)


class PprdataLog(VsolvModels):
    maindata = models.TextField(null=True)
    range_from = models.IntegerField(null=True, blank=True)
    range_to = models.IntegerField(null=True, blank=True)
    # total_row = models.IntegerField(null=True, blank=True)
    lastsync_date = models.DateTimeField(null=True, blank=True)
    status = models.SmallIntegerField(default=1)
    created_date = models.DateTimeField(default=now)


class PprdataExpGrpMeta(VsolvModels):
    finyear = models.CharField(max_length=16, null=True, blank=True)
    quarter = models.IntegerField(null=True, blank=True)
    transactionmonth = models.CharField(max_length=16, null=False, blank=False)
    transactionyear = models.CharField(max_length=4, null=False, blank=False)
    apinvoicebranch_id = models.IntegerField(null=True,blank=True)
    apexpense_id = models.IntegerField()
    bizname = models.CharField(max_length=128, null=False, blank=False)
    sectorname = models.CharField(max_length=32, null=True, blank=True)
    amount = models.DecimalField(max_digits=16, decimal_places=2, default=0.00)
    status = models.SmallIntegerField(default=1)
    created_date = models.DateTimeField(default=now)

class Budgetdetial(VsolvModels):
    finyear = models.CharField(max_length=16,null=True,blank=True)
    quarter = models.IntegerField(null=True,blank=True)
    transactionmonth = models.CharField(max_length=16, null=False, blank=False)
    transactionyear = models.CharField(max_length=4, null=False, blank=False)
    transactiondate = models.DateField()
    valuedate = models.DateField()
    apinvoicebranch_id = models.IntegerField(null=True,blank=True,db_index=True)
    apinvoicesupplier_id = models.IntegerField(null=True, blank=True)
    sectorname = models.CharField(max_length=32, null=True,blank=True)
    bizname = models.CharField(max_length=128, null=False, blank=False)
    bsname = models.CharField(max_length=128, null=True, blank=True)
    ccname = models.CharField(max_length=128, null=True, blank=True)
    # apcat_id = models.IntegerField()
    apsubcat_id = models.IntegerField(default=0,db_index=True)
    apsubcat_glno = models.IntegerField(null=True)
    apexpense_id = models.IntegerField(default=0,db_index=True)
    pprline = models.IntegerField(default=0)
    amount = models.DecimalField(max_digits=16, decimal_places=2, default=0.00)
    remark_key = models.CharField(max_length=128, null=True, blank=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField(null=False, blank=False)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)



class PPRaudit(VsolvModels):
    ref_id = models.IntegerField(default=-1)
    ref_type = models.IntegerField(null=True, blank=True)
    data = models.TextField(null=True, blank=True)
    emp_id = models.IntegerField()
    date = models.DateTimeField(null=True, blank=True)
    req_status = models.SmallIntegerField(null=True)
    action = models.CharField(max_length=28, null=True, blank=True)

class Business_Category(VsolvModels):
    code = models.CharField(max_length=8, null=True, blank=True)
    name = models.CharField(max_length=1048)
    sector_id = models.IntegerField()
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class Business_SubCategory(VsolvModels):
    code = models.CharField(max_length=8, null=True, blank=True)
    name = models.CharField(max_length=1048)
    businesscategory = models.ForeignKey(Business_Category, on_delete=models.CASCADE, null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class CostDriver(VsolvModels):
    code = models.CharField(max_length=8, null=True, blank=True)
    name = models.CharField(max_length=1048)
    parameter_name = models.CharField(max_length=1048)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class AllocationLevel(VsolvModels):
    code = models.CharField(max_length=8, null=True, blank=True)
    name = models.CharField(max_length=1048)
    arrange = models.CharField(max_length=1048,null=True, blank=True)
    reportlevel = models.CharField(max_length=1048)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class bscc_maping(VsolvModels):
    code = models.CharField(max_length=8, null=True, blank=True)
    name = models.CharField(max_length=1048)
    bsname = models.CharField(max_length=1048)
    subcat_id = models.IntegerField(null=True, blank=True)
    allocationlevel = models.ForeignKey(AllocationLevel, on_delete=models.CASCADE, null=True)
    costdriver = models.ForeignKey(CostDriver, on_delete=models.CASCADE, null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class FAS_Main(VsolvModels):
    source = models.CharField(max_length=128,null=True, blank=True)
    entry_id = models.IntegerField(null=True, blank=True)
    entity_code = models.CharField(max_length=128,null=True, blank=True)
    module = models.CharField(max_length=128,null=True, blank=True)
    sync_date = models.DateField(null=True, blank=True)
    wiseFin_date = models.DateField(null=True, blank=True)
    update_date = models.DateField(null=True, blank=True)
    CBS_date = models.DateField(null=True, blank=True)
    entry_status = models.IntegerField(null=True, blank=True)
    branch_id = models.IntegerField(null=True, blank=True)
    cr_no = models.CharField(max_length=128,null=True, blank=True)
    supplier_id = models.IntegerField(null=True, blank=True)
    product_id = models.CharField(max_length=128,null=True, blank=True)
    commodity_id = models.CharField(max_length=1048,null=True, blank=True)
    apcat_id = models.IntegerField(null=True, blank=True)
    apsubcat_id = models.IntegerField(null=True, blank=True)
    bs_id = models.IntegerField(null=True, blank=True)
    bscc_id = models.IntegerField(null=True, blank=True)
    CBS_GL = models.CharField(max_length=128,null=True, blank=True)
    sort_oder = models.IntegerField(null=True, blank=True)
    ALEI = models.CharField(max_length=128,null=True, blank=True)
    reporting_level = models.CharField(max_length=128,null=True, blank=True)
    sorce_bscc_id = models.IntegerField(null=True, blank=True)
    input = models.CharField(max_length=128,null=True, blank=True)
    premise_id = models.IntegerField(null=True, blank=True)
    amount = models.FloatField(null=True, blank=True)
    module_flag = models.CharField(max_length=128,null=True, blank=True)
    status = models.IntegerField(null=True, blank=True)
    created_by = models.IntegerField(null=False, blank=False)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)


class Allocation_meta(VsolvModels):
    source_bscc_code = models.ForeignKey('self',on_delete=models.CASCADE, null=True)
    frombscccode=models.IntegerField(null=True)
    level = models.IntegerField(null=True)
    cost_driver = models.IntegerField(null=True)
    allocation_amount = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    bscc_code = models.IntegerField(null=True)
    cc_id = models.IntegerField(null=True)
    bs_id = models.IntegerField(null=True)
    parameter = models.CharField(max_length=128,null=True)
    premium_amount = models.CharField(max_length=128, null=True)
    input_value = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    ratio = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    to_amount = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    newcr_number = models.CharField(max_length=128, null=True)
    validity_from = models.DateField(null=True, blank=True)
    validity_to = models.DateField(null=True, blank=True)
    status = models.IntegerField(default=1)
    created_by = models.IntegerField(null=False, blank=False)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class AllocationRatio(VsolvModels):
    frombscc_id = models.IntegerField(null=True, blank=True)
    tobscc_id = models.ForeignKey(bscc_maping, on_delete=models.CASCADE, null=True)
    ratio = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    parameter_name = models.CharField(max_length=1048)
    quantity = models.IntegerField(null=True, blank=True)
    markup = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class Pprdata_maintable(VsolvModels):
    finyear = models.CharField(max_length=16, null=True, blank=True)
    quarter = models.IntegerField(null=True, blank=True)
    transactionmonth = models.CharField(max_length=16, null=False, blank=False)
    transactionyear = models.CharField(max_length=4, null=False, blank=False)
    transactiondate = models.DateField()
    valuedate = models.DateField(null=True)
    cc_code = models.CharField(max_length=16, null=True, blank=True)
    bs_code = models.CharField(max_length=16, null=True, blank=True)
    apinvoice_id = models.IntegerField(null=True)
    apinvoicebranch_id = models.IntegerField(null=True, blank=True)
    apinvoicesupplier_id = models.IntegerField(null=True, blank=True)
    apinvoicedetails_id = models.IntegerField(default=0)
    apsubcat_id = models.IntegerField(null=True)
    apexpense_id = models.IntegerField(null=True)
    bsname = models.CharField(max_length=128, null=False, blank=False)
    ccname = models.CharField(max_length=128, null=False, blank=False)
    bizname = models.CharField(max_length=128, null=False, blank=False)
    sectorname = models.CharField(max_length=32, null=True, blank=True)
    amount = models.DecimalField(max_digits=16, decimal_places=2, default=0.00)
    taxamount = models.DecimalField(max_digits=16, decimal_places=2, default=0.00)
    otheramount = models.DecimalField(max_digits=16, decimal_places=2, default=0.00)
    totalamount = models.DecimalField(max_digits=16, decimal_places=2, default=0.00)
    categorygid = models.IntegerField(null=True)
    ccbsdtl_bs = models.IntegerField(null=True)
    ccbsdtl_cc = models.IntegerField(null=True)
    entry_module = models.CharField(max_length=128, null=True, blank=True)
    entry_crno = models.CharField(max_length=128, null=True, blank=True)
    level = models.IntegerField(null=True)
    cost_driver = models.IntegerField(null=True)
    allocation_amount = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    bscc_code = models.IntegerField(null=True)
    parameter = models.CharField(max_length=128, null=True)
    input_value = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    ratio = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    to_amount = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    source_bscc_code = models.IntegerField(null=True)
    frombscccode = models.IntegerField(null=True)
    premium_amount = models.CharField(max_length=128, null=True)
    account_no = models.CharField(max_length=128, null=True)
    DRCR_IN = models.CharField(max_length=32, null=True)
    status = models.SmallIntegerField(default=0)
    create_by = models.IntegerField(null=False, blank=False)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)


class PPR_files(VsolvModels):
    cr_no = models.CharField(max_length=128,null=True)
    file_name = models.CharField(max_length=512)
    mono_invoiceheader_id = models.IntegerField(null=True)
    mono_file_id = models.IntegerField(null=True)
    file_id = models.CharField(max_length=100, default=-1)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField(null=True, blank=True)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class PPR_history(VsolvModels):
    user_id = models.IntegerField()
    module = models.CharField(max_length=512)
    data = models.TextField()
    remark_key = models.CharField(max_length=128, null=True, blank=True)
    remark = models.TextField(null=True, blank=True)
    created_status = models.SmallIntegerField(default=1)
    created_date = models.DateTimeField(default=now)

class PPR_Documents(VsolvModels):
    file_name = models.CharField(max_length=1064)
    gen_filename = models.CharField(max_length=1064)
    file_size = models.CharField(max_length=1064)
    type = models.CharField(max_length=128)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class active_clients(VsolvModels):
    asset_id = models.IntegerField(null=True)
    client_id = models.IntegerField(null=True)
    product_id = models.IntegerField(null=True)
    type = models.IntegerField(null=True)
    flag = models.IntegerField(null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class clients_details_months(VsolvModels):
    activeclient=models.ForeignKey(active_clients, on_delete=models.SET_NULL, null=True)
    month = models.IntegerField(null=True)
    bop = models.IntegerField(null=True)
    new_client = models.IntegerField(null=True)
    attrition = models.IntegerField(null=True)
    closing = models.IntegerField(null=True)
    amount = models.FloatField(default=0.00)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class clients_details_date(VsolvModels):
    activeclient = models.ForeignKey(active_clients, on_delete=models.SET_NULL, null=True)
    date = models.DateTimeField(null=True)
    bop = models.IntegerField(null=True)
    new_client = models.IntegerField(null=True)
    attrition = models.IntegerField(null=True)
    closing = models.IntegerField(null=True)
    amount = models.FloatField(default=0.00)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Income_header(VsolvModels):
    branch_id = models.IntegerField(null=True)
    business_id = models.IntegerField(null=True)
    assest_class = models.IntegerField(null=True)
    client_id = models.IntegerField(null=True)
    product_id = models.IntegerField(null=True)
    fee_type = models.IntegerField(null=True)
    flag = models.IntegerField(null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Income_details_month(VsolvModels):
    activeclient = models.ForeignKey(Income_header, on_delete=models.SET_NULL, null=True)
    month = models.IntegerField(null=True)
    sanctioned_amount = models.FloatField(default=0.00)
    sanctioned_date = models.DateTimeField(null=True)
    sanction_expiry_date = models.DateTimeField(null=True)
    disbursal_amount = models.FloatField(default=0.00)
    total_disbursalamount = models.FloatField(default=0.00)
    beginning_fee_due = models.FloatField(default=0.00)
    fee_due = models.FloatField(default=0.00)
    collected_fee = models.FloatField(default=0.00)
    interest_amount = models.FloatField(default=0.00)
    eir_amount = models.FloatField(default=0.00)
    opening_pos = models.FloatField(default=0.00)
    closing_pos = models.FloatField(default=0.00)
    principal_gl = models.IntegerField(null=True)
    interest_gl = models.IntegerField(null=True)
    fee_gl = models.IntegerField(null=True)
    eir_gl = models.IntegerField(null=True)
    flag = models.IntegerField(null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Income_details_date(VsolvModels):
    activeclient = models.ForeignKey(Income_header, on_delete=models.SET_NULL, null=True)
    date = models.DateTimeField(null=True)
    disbursal_amount = models.FloatField(default=0.00)
    sanctioned_amount = models.FloatField(default=0.00)
    sanctioned_date = models.DateTimeField(null=True)
    sanction_expiry_date = models.DateTimeField(null=True)
    total_disbursalamount = models.FloatField(default=0.00)
    beginning_fee_due = models.FloatField(default=0.00)
    fee_due = models.FloatField(default=0.00)
    collected_fee = models.FloatField(default=0.00)
    interest_amount = models.FloatField(default=0.00)
    eir_amount = models.FloatField(default=0.00)
    opening_pos = models.FloatField(default=0.00)
    closing_pos = models.FloatField(default=0.00)
    principal_gl = models.IntegerField(null=True)
    interest_gl = models.IntegerField(null=True)
    fee_gl = models.IntegerField(null=True)
    eir_gl = models.IntegerField(null=True)
    flag = models.IntegerField(null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Income_overalldata(VsolvModels):
    activeclient = models.ForeignKey(Income_header, on_delete=models.SET_NULL, null=True)
    branch_id = models.IntegerField(null=True)
    business_id = models.IntegerField(null=True)
    assest_class = models.IntegerField(null=True)
    client_id = models.IntegerField(null=True)
    product_id = models.IntegerField(null=True)
    santion_number = models.IntegerField(null=True)
    deal_name = models.CharField(max_length=1064, null=True)
    sanctioned_amount = models.FloatField(default=0.00)
    sanctioned_date = models.DateTimeField(null=True)
    sanction_expiry_date = models.DateTimeField(null=True)
    disbursed_amount = models.FloatField(default=0.00)
    disbursed_date = models.DateTimeField(null=True)
    total_disbural = models.FloatField(default=0.00)
    prod_desc = models.CharField(max_length=1064, null=True)
    fee_type = models.IntegerField(null=True)
    beginning_fee_due = models.FloatField(default=0.00)
    fee_due = models.FloatField(default=0.00)
    collected_fee = models.FloatField(default=0.00)
    fee_collection_date = models.DateTimeField(null=True)
    overall_fee_amount = models.FloatField(default=0.00)
    interest_amount = models.FloatField(default=0.00)
    eir_amount = models.FloatField(default=0.00)
    opening_pos = models.FloatField(default=0.00)
    closing_pos = models.FloatField(default=0.00)
    avg_pos = models.FloatField(default=0.00)
    principal_gl = models.IntegerField(null=True)
    interest_gl = models.IntegerField(null=True)
    fee_gl = models.IntegerField(null=True)
    eir_gl = models.IntegerField(null=True)
    flag = models.IntegerField(null=True)
    prin_gldesc = models.CharField(max_length=1064, null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Ppr_Sources(VsolvModels):
    code = models.CharField(max_length=1064)
    name = models.CharField(max_length=1064)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Head_Groups(VsolvModels):
    source=models.ForeignKey(Ppr_Sources, on_delete=models.SET_NULL, null=True)
    code = models.CharField(max_length=1064)
    name = models.CharField(max_length=1064)
    description = models.CharField(max_length=1064, null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)
class Sub_Groups(VsolvModels):
    head_group=models.ForeignKey(Head_Groups, on_delete=models.SET_NULL, null=True)
    code = models.CharField(max_length=1064)
    name = models.CharField(max_length=1064)
    gl_no = models.CharField(max_length=1064,null=True)
    description = models.CharField(max_length=1064, null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class GL_Subgroup(VsolvModels):
    head_group=models.ForeignKey(Sub_Groups, on_delete=models.SET_NULL, null=True)
    gl_no = models.CharField(max_length=1064)
    description = models.CharField(max_length=1064,null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class DSS_Format_Month(VsolvModels):
    gl_subgroup=models.ForeignKey(GL_Subgroup, on_delete=models.SET_NULL, null=True)
    opening_balance = models.FloatField(default=0.00)
    credit = models.FloatField(default=0.00)
    debit = models.FloatField(default=0.00)
    closing_balance = models.FloatField(default=0.00)
    month = models.IntegerField()
    flag = models.IntegerField(null=True)
    description = models.CharField(max_length=1064, null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class DSS_Format_Date(VsolvModels):
    gl_subgroup=models.ForeignKey(GL_Subgroup, on_delete=models.SET_NULL, null=True)
    opening_balance = models.FloatField(default=0.00)
    credit = models.FloatField(default=0.00)
    debit = models.FloatField(default=0.00)
    closing_balance = models.FloatField(default=0.00)
    date = models.DateTimeField()
    flag = models.IntegerField(null=True)
    description = models.CharField(max_length=1064, null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Ppr_Expense(VsolvModels):
    sector_id = models.IntegerField(null=True,blank=True)
    expensegroup_id = models.IntegerField(null=True,blank=True)
    expense_id = models.IntegerField(null=True,blank=True)
    cat_id = models.IntegerField(null=True,blank=True)
    subcat_id = models.IntegerField(null=True,blank=True)
    assest_id = models.IntegerField(null=True,blank=True)
    product_id = models.IntegerField(null=True,blank=True)
    client_id = models.IntegerField(null=True,blank=True)
    flag = models.IntegerField(null=True)
    entry_module = models.CharField(max_length=128, null=True, blank=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Ppr_Expense_Date(VsolvModels):
    parent = models.ForeignKey(Ppr_Expense, on_delete=models.SET_NULL, null=True)
    date = models.DateField()
    transaction_date = models.DateField()
    value_date = models.DateField()
    amount = models.FloatField(default=0.00)
    taxamount = models.FloatField(default=0.00)
    otheramount = models.FloatField(default=0.00)
    totalamount = models.FloatField(default=0.00)
    flag = models.IntegerField(null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Ppr_Expense_Month(VsolvModels):
    parent = models.ForeignKey(Ppr_Expense, on_delete=models.SET_NULL, null=True)
    transaction_month = models.IntegerField()
    amount = models.FloatField(default=0.00)
    taxamount = models.FloatField(default=0.00)
    otheramount = models.FloatField(default=0.00)
    totalamount = models.FloatField(default=0.00)
    flag = models.IntegerField(null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Ppr_Expense_Quarterly(VsolvModels):
    parent = models.ForeignKey(Ppr_Expense, on_delete=models.SET_NULL, null=True)
    transaction_Quarterly = models.IntegerField()
    amount = models.FloatField(default=0.00)
    taxamount = models.FloatField(default=0.00)
    otheramount = models.FloatField(default=0.00)
    totalamount = models.FloatField(default=0.00)
    flag = models.IntegerField(null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True)
    updated_date = models.DateTimeField(null=True)

class Ppr_Expense_Alldata(VsolvModels):
    transactiondate = models.DateField()
    valuedate = models.DateField()
    apinvoice_id = models.IntegerField(null=True, blank=True,)
    apinvoicebranch_id = models.IntegerField(null=True, blank=True)
    apinvoicesupplier_id = models.IntegerField(null=True, blank=True)
    apinvoicedetails_id = models.IntegerField(default=0)
    apsubcat_id = models.IntegerField(null=True)
    apexpense_id = models.IntegerField(null=True)
    bs_id = models.IntegerField(null=True)
    cc_id = models.IntegerField(null=True)
    biz_id = models.IntegerField(null=True)
    product_id = models.IntegerField(null=True)
    client_id = models.IntegerField(null=True)
    expensegroup_id = models.IntegerField(null=True)
    sector_id = models.IntegerField(null=True)
    amount = models.FloatField(default=0.00)
    taxamount = models.FloatField(default=0.00)
    otheramount = models.FloatField(default=0.00)
    totalamount = models.FloatField(default=0.00)
    categorygid = models.IntegerField(null=True)
    entry_module = models.CharField(max_length=128, null=True, blank=True)
    entry_crno = models.CharField(max_length=128, null=True, blank=True)
    status = models.SmallIntegerField(default=0)
    create_by = models.IntegerField(null=False, blank=False)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)
    fas_flag = models.IntegerField(default=1)

class NAC_AllocationRatio(VsolvModels):
    allocation_from = models.IntegerField(null=True, blank=True)
    allocation_to = models.IntegerField(null=True, blank=True)
    allocation_methodology = models.CharField(max_length=1048)
    allocation_description = models.CharField(max_length=1048)
    ratio = models.DecimalField(max_digits=16, decimal_places=2, null=True)
    flag = models.SmallIntegerField(default=1)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)


